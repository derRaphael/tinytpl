<?php
/*
 * tinyTplOrderCount.class.php
 *
 * Copyright 2013 derRaphael <software@itholic.org>
 *
 * Version 0.1
 *
 * This observer demonstrates in which order templates are renderd. It 
 * might break you layout or functionality. Use with caution.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above
 *   copyright notice, this list of conditions and the following disclaimer
 *   in the documentation and/or other materials provided with the
 *   distribution.
 * * Neither the name of the  nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
namespace tinyTpl\hooks
{
    class tinyTplOrderCount extends tinyObserver
    {
        public $TARGETS = array( 'tinyTpl\tiny::read_template' );

        const VERSION = "0.1";

        // We do not want tiny to init on base run
        const AUTOINIT = false;

        public function trigger( $TINY, $STAGE, $TARGET )
        {
            switch ( $STAGE )
            {
                case 0:
                    if ( $TARGET == 'tinyTpl\tiny::read_template' )
                    {
                        // Create or update counter
                        if ( ! isset( \tinyTpl\tiny::sys()->tpl_counter ) )
                        {
                            \tinyTpl\tiny::sys()->tpl_counter = 0;
                        } else {
                            \tinyTpl\tiny::sys()->tpl_counter+=1;
                        }
                    }
                    break;
                case 50:
                    if ( $TARGET == 'tinyTpl\tiny::read_template' )
                    {
                        // inject HTML into stream
?><div class="exececution-order" style="position:relative;height:30px;line-height:30px;font-size:14px;font-family: sans;">
    Execution order: 
    <div style="-webkit-border-radius: 15px; -moz-border-radius: 15px; border-radius: 15px;; color: #fff; background: #f00; position: absolute; top: 0; left: 120px; width: 30px; height: 30px; overflow: hidden; font-size: 20px; line-height: 30px; font-weight: bold; text-align: center;">
        <?=\tinyTpl\tiny::sys()->tpl_counter?>
    </div>
</div><?php

                    }
            }
        }
    }
}

/**
 * The section below is somewhat html which is displayed at the hook page in tinyAdmin
 * It must retain this format, since it's stripped from each hook class by some regex.
**/

/** ABSTRACT:

    <span class="x-synopsis">
        This observer demonstrates in which order templates are renderd. It might break you layout or functionality.
        Use with caution.
     </span>

    <span class="x-author">
        derRaphael
    </span>

    <span class="x-version">
        0.1
    </span>

    <span class="x-licence">
        3-clause BSD
    </span>

    <span class="x-info">
        tinyTplOrderCount
    </span>

**/
?>